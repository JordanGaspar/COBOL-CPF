      *Copyright 2022 Jordan Gaspar

      *Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

      *The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

      * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

      * PROGRAMA QUE VERIFICA O CPF
       IDENTIFICATION DIVISION.
       PROGRAM-ID. CPF.
       AUTHOR. JORDAN GASPAR.
       INSTALLATION. GNU/LINUX USING GNUCOBOL VERSION "3.1.2".
       DATE-WRITTEN. 25/04/2022.
       DATE-COMPILED. 25/04/2022 09:31PM.
       SECURITY. NON-CONFIDENTIAL.
       ENVIRONMENT DIVISION.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       77 CPF-NUMBER PIC X(11).
       01 CPF-COUNTERS.
           05 CHARACTER-COUNTER PIC 99 VALUE 00.
           05 LOOP-COUNTER PIC 99 VALUE 01.
           05 CPF-COUNTER PIC 99 VALUE 01.
      * LISTA EXPLICATIVA DE POSSÍVEIS ERROS
       01 ERROR-LIST.
           05 ERROR-REASON PIC X(44).
           05 WRONG-TEXT PIC X(24)
               VALUE 'THE STRING IS ILL-FORMED'.
           05 DOTS-ERROR PIC X(32)
               VALUE 'THERE IS NO DOT ON ''XX'' POSITION'.
           05 DASH-ERROR PIC X(33)
               VALUE 'THERE IS NO DASH ON ''XX'' POSITION'.
           05 NUMERIC-ERROR PIC X(35)
               VALUE 'THERE IS NO NUMBER ON ''XX'' POSITION'.
           05 ALL-EQUAL-ERROR PIC X(43) 
               VALUE 'ALL DIGITS ARE THE SAME; THE DIGIT IS ''X'''.
           05 1-VERIFICATION-ERROR PIC X(38)
               VALUE 'THE FIRST VERIFICATION NUMBER IS WRONG'.
           05 2-VERIFICATION-ERROR PIC X(39)
               VALUE 'THE SECOND VERIFICATION NUMBER IS WRONG'.
       01 CPF-REPETITION.
           05 CPF-ELEMENT PIC 9.
           05 CPF-NOT-EQUAL PIC X VALUE 'N'.
       01 VALIDATION-LOOP.
           05 VI PIC 9 VALUE 0 USAGE COMP.
           05 DI PIC 9 VALUE 9 USAGE COMP.
           05 V1 PIC 999 VALUE 0 USAGE COMP.
           05 V2 PIC 999 VALUE 0 USAGE COMP.
       LINKAGE SECTION.
      * CPF-RAW É A VARIÁVEL INICIAL DO SISTEMA, QUE ACEITA A ENTRADA DE DADOS
      * UM CPF VÁLIDO DEVE POSSUIR A FORMA XXX.XXX.XXX-XX, SENDO X OS NÚMEROS
       01 CPF-INPUT-OUTPUT.
           05 CPF-RAW PIC X(15).
           05 CPF-RETURN PIC X.
           05 CPF-STATUS PIC X(50).
       PROCEDURE DIVISION USING BY REFERENCE CPF-INPUT-OUTPUT.
       100-MAIN.
      * VERIFICA SE HÁ APENAS 1 CARACTER DE ESPAÇO NO FINAL DO INPUT
           INSPECT CPF-RAW TALLYING CHARACTER-COUNTER 
               FOR LEADING ZEROES.
           IF CHARACTER-COUNTER IS GREATER THAN 01 THEN
                   MOVE WRONG-TEXT TO ERROR-REASON
                   PERFORM 102-ERROR
           END-IF.
           PERFORM 200-PARSE.
           PERFORM 300-VALIDATE.
           PERFORM 101-EXIT.
           EXIT.
      * SAI DO PROGRAMA APÓS REALIZAR TODA A VALIDAÇÃO COM SUCESSO
       101-EXIT.
           MOVE 'THE CPF IS VALID!' TO CPF-STATUS.
           MOVE 'Y' TO CPF-RETURN.
           GOBACK.
      * IMPRIME A TELA DE ERRO COM ESCLARECIMENTO SOBRE O QUE ESTÁ ERRADO
       102-ERROR.
           MOVE 'N' TO CPF-RETURN.
           MOVE ERROR-REASON TO CPF-STATUS.
           GOBACK.
      * SEPARA OS NÚMERO DOS DÍGITOS E REALIZA UMA VERIFICAÇÃO INICIAL, 
      * CADA CARACTER É VERIFICADO EM SEPARADO, NÚMERO, OS PONTOS E O 
      * TRAÇO(DASH).
       200-PARSE.
      * 14 É O NÚMERO DE CARACTERES EM UM CPF BRUTO.
           PERFORM 201-PARSE-LOOP UNTIL LOOP-COUNTER > 14.
       201-PARSE-LOOP.
      * VERIFICA SE OS PONTOS ESTÃO CORRETOS NO CPF BRUTO
           IF LOOP-COUNTER IS EQUAL TO 4 OR LOOP-COUNTER IS EQUAL TO 8
               IF CPF-RAW(LOOP-COUNTER:1) IS NOT EQUAL TO '.'
                   MOVE DOTS-ERROR TO ERROR-REASON
                   MOVE LOOP-COUNTER TO ERROR-REASON(21:2)
                   PERFORM 102-ERROR
               ELSE
                   ADD 1 TO LOOP-COUNTER
                   EXIT
               END-IF
           END-IF.
      * VERIFICA SE O TRAÇO(DASH) ESTÁ CORRETO.
           IF LOOP-COUNTER IS EQUAL TO 12
               IF CPF-RAW(LOOP-COUNTER:1) IS NOT EQUAL TO '-'
                   MOVE DASH-ERROR TO ERROR-REASON
                   MOVE LOOP-COUNTER TO ERROR-REASON(22:2)
                   PERFORM 102-ERROR
               ELSE
                   ADD 1 TO LOOP-COUNTER
                   EXIT
               END-IF
           END-IF.
      * VERIFICA SE OS DÍGITOS SÃO NÚMEROS
           IF CPF-RAW(LOOP-COUNTER:1) IS NUMERIC
               PERFORM 205-ASSIGN-CPF
               ADD 1 TO LOOP-COUNTER
               EXIT
           ELSE
               MOVE NUMERIC-ERROR TO ERROR-REASON
               MOVE LOOP-COUNTER TO ERROR-REASON(24:2)
               PERFORM 102-ERROR
           END-IF.
      * ADICIONA CADA DÍGITO AO FORMATO NUMÉRICO AO MESMO TEMPO QUE 
      * VERIFICA SE EXISTEM DÍGITOS REPETIDOS
       205-ASSIGN-CPF.
           PERFORM 206-CHECK-REPETITION.
           MOVE CPF-RAW(LOOP-COUNTER:1) TO CPF-NUMBER(CPF-COUNTER:1).
           ADD 1 TO CPF-COUNTER.
      * VERIFICA OS DÍGITOS REPETIDOS, SE EXISTEM, SETA Y PARA CPF-NOT-EQUAL
       206-CHECK-REPETITION.
           IF CPF-COUNTER IS EQUAL TO 1
               MOVE CPF-RAW(LOOP-COUNTER:1) TO CPF-ELEMENT.
           IF CPF-RAW(LOOP-COUNTER:1) IS NOT EQUAL TO CPF-ELEMENT
               MOVE 'Y' TO CPF-NOT-EQUAL.
      * INICIA A VALIDAÇÃO DO CPF:
      *    - PRIMEIRO VERIFICA SE OS NÚMEROS SÃO TODOS IGUAIS;
       300-VALIDATE.
      * VERIFICAÇÃO DE TODOS OS DÍGITOS IGUAIS.
           IF CPF-NOT-EQUAL IS EQUAL TO 'N' THEN
               MOVE ALL-EQUAL-ERROR TO ERROR-REASON
               MOVE CPF-ELEMENT TO ERROR-REASON(40:1)
               PERFORM 102-ERROR
           END-IF.
      * INICIA A VERIFICAÇÃO DO CPF CONFORME O ALGORÍTIMO PADRÃO
           PERFORM 301-METHOD UNTIL VI IS GREATER THAN 8.
           PERFORM 302-METHOD.
       301-METHOD.
           COMPUTE V1 = 
               V1 + (FUNCTION NUMVAL(CPF-NUMBER(DI:1)) * 
               (9 - (FUNCTION MOD (VI,10)))).
           COMPUTE V2 = 
               V2 + FUNCTION NUMVAL(CPF-NUMBER(DI:1)) *
               (9 - (FUNCTION MOD((VI + 1), 10))).
           ADD 1 TO VI.
           SUBTRACT 1 FROM DI.
       302-METHOD.
           COMPUTE V1 = 
               FUNCTION MOD(FUNCTION MOD(V1, 11), 10).
           COMPUTE V2 =
               V2 + V1 * 9.
           COMPUTE V2 = 
               FUNCTION MOD(FUNCTION MOD(V2, 11), 10).
           IF FUNCTION NUMVAL(CPF-NUMBER(10:1)) IS NOT EQUAL TO V1 THEN
               MOVE 1-VERIFICATION-ERROR TO ERROR-REASON
               PERFORM 102-ERROR.
           IF FUNCTION NUMVAL(CPF-NUMBER(11:1)) IS NOT EQUAL TO V2 THEN
               MOVE 2-VERIFICATION-ERROR TO ERROR-REASON
               PERFORM 102-ERROR.
